import { HorizontalBox } from "std-widgets.slint";

struct Task {
    id: int,
    content: string,
    create-date: string,
    finished: bool,
}

global CustomCheckBoxController {
    pure callback toggle-task(id: int, finished: bool);
}

component CustomCheckBox inherits HorizontalLayout {
    in property <Task> task;
    in property <int> idx;
    in-out property <bool> finished: task.finished;

    alignment: start;

    Rectangle {
        width: parent.height * 61.8%;
        height: parent.height * 61.8%;
        border-width: 1px;
        border-color: #CCC;
        border-radius: 8px;
        background: finished ? #4CAF50 : #CCC;


        // Display checkmark if finished
        Text {
            text: finished ? "âœ”" : "";
            font-size: parent.height / 1.618; // Dynamically scale the checkmark size
            color: #56640E;
        }

        TouchArea {
            @children
        }

        animate background {
            duration: 318ms;
            easing: ease-in-out;
        }
    }

    Rectangle {
        // Display the label text
        height: parent.height * 61.8%;
        Text {
            width: parent.width;
            height: parent.height;
            horizontal-alignment: left;
            vertical-alignment: center;
            text: root.task.content;
            color: #56640E;
            font-size: parent.height / 1.618; // Dynamically scale the checkmark size
            overflow: elide; // Truncate overflowing text
        }
    }
}

export { CustomCheckBox, CustomCheckBoxController, Task }
