import { HorizontalBox, Palette } from "std-widgets.slint";
import { Style } from "../common.slint";

struct Task {
    id: int,
    content: string,
    create-date: string,
    finished: bool,
}

global CustomCheckBoxController { }

component CustomCheckBox inherits HorizontalLayout {
    in property <Task> task;
    in property <int> idx;
    in-out property <bool> finished: task.finished;

    callback on-checked();
    callback on-del();

    alignment: start;

    // checked
    check-box := Rectangle {
        width: parent.height * 61.8%;
        height: parent.height * 61.8%;
        border-width: 1px;
        border-color: #CCC;
        border-radius: 8px;
        background: finished ? #4CAF50 : #CCC;

        // Display checkmark if finished
        Text {
            text: finished ? "âœ”" : "";
            font-size: parent.height / 1.618;
            color: #56640E;
            font-family: "Comic Sans MS";
        }

        TouchArea {
            clicked => {
                root.on-checked();
            }
        }

        animate background {
            duration: 318ms;
            easing: ease-in-out;
        }
    }

    // content
    Rectangle {
        height: parent.height * 61.8%;
        width: (parent.width - check-box.width - del-button.width) * 95%;
        Text {
            width: parent.width;
            height: parent.height;
            horizontal-alignment: left;
            vertical-alignment: center;
            text: root.task.content;
            color: #56640E;
            font-size: parent.height / 1.618;
            font-family: "Comic Sans MS";
            overflow: elide;
        }
    }
    
    // delete-button
    del := TouchArea {
        clicked => {
            root.on-del();
        }
        del-button := Rectangle {
            visible: del.has-hover;
            width: parent.height * 61.8%;
            height: parent.height * 61.8%;
            drop-shadow-color: #CCC;
            drop-shadow-blur: 4px;

            Text {
                text: "X";
                font-size: parent.height / 1.618;
                color: #56640E;
            }

            animate drop-shadow-color {
                duration: 318ms;
                easing: ease-in-out;
            }
        }
    }
}

export { CustomCheckBox, CustomCheckBoxController, Task }
