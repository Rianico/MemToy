import { DatePickerPopup } from "std-widgets.slint";

import { ViewInfo, TabType, Style } from "common.slint";

import { Calendar, CalendarStatus, CalendarController } from "components/calendar.slint";

component NavItem inherits Rectangle {
    in property <ViewInfo> view-info;
    in property <bool> is-active;

    clip: true;
    border-radius: self.height / 1.618;
    border-color: Style.nav-border-color;
    border-width: 0.01rem;

    Text {
        text: view-info.nav-bar-name;
        font-size: 1.618rem;
        font-weight: 647;
        font-family: Style.default-font-family;
        horizontal-alignment: center;
        vertical-alignment: center;
        color: Style.nav-item-font-color;
        animate color {
            duration: 618ms;
            easing: linear;
        }
    }

    animate drop-shadow-color, drop-shadow-blur {
        duration: 618ms;
        easing: linear;
    }
}

component NavBar inherits HorizontalLayout {
    in property <[ViewInfo]> nav-items;
    out property <TabType> active-tab-type: nav-items[0].tab-type;
    out property <int> active-tab-type-idx: 0;

    height: 100%;
    width: 100%;
    spacing: 1rem;

    Rectangle {
        width: 16.61%;
    }

    for item[idx] in nav-items: NavItem {
        view-info: item;

        drop-shadow-color: root.active-tab-type == item.tab-type ? Style.nav-activate-background : Style.surface;
        drop-shadow-blur: root.active-tab-type == item.tab-type ? self.height / 2.618 : 0;

        TouchArea {
            clicked => {
                active-tab-type = item.tab-type;
                active-tab-type-idx = idx;
            }
        }
    }

    Rectangle {
        width: 16.61%;
    }

    public function switch-tab(x: int) {
        debug("switch tab bias: " + x);
        active-tab-type-idx = abs(mod(active-tab-type-idx + x, nav-items.length));
        active-tab-type = nav-items[active-tab-type-idx].tab-type;
    }
}

export { NavBar, NavItem, Calendar }
