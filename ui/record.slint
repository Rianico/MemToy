import { HorizontalBox, VerticalBox,  LineEdit, Button, TextEdit, ListView, CheckBox, Palette } from "std-widgets.slint";

import { Style, View, TabType, ViewInfo, RecordRes } from "common.slint";

import { Calendar, CalendarStatus } from "components/calendar.slint";
import { AutoPopupWindow } from "components/popupwindow.slint";
import { ReviewStatus, ReviewController } from "review.slint";
import { GeneralButton } from "components/buttons.slint";

global RecordController {
    // @return true: success, false: failed
    pure callback save-records(string, string) -> RecordRes;
}

global RecordStatus { }

component Record inherits VerticalLayout {
    in property <[ViewInfo]> page-items;

    Calendar {
        height: 14%;
    }

    Rectangle {
        min-height: parent.min-height * 61.8%;
        preferred-height: parent.min-height * 70%;
        max-height: parent.min-height * 80%;
        background: Style.details-background-color;

        record-content := TextEdit {
            font-size: self.height * 4.56%;
            width: 100%;
            height: 100%;
            opacity: 0.618;
            horizontal-alignment: left;
            placeholder-text: "enter your text...";

            function unfocus() {
                self.clear-focus();
            }

            function clear-content() {
                self.select-all();
                self.clear-selection();
            }

            key-released(event) => {
                if event.modifiers.control && event.text == Key.Return {
                    save-button.save();
                    return accept;
                }
                return accept;
            }
        }

        save-warnning := AutoPopupWindow {

            after-auto-close => {
                record-content.unfocus();
            }

            Rectangle {
                x: parent.width * 38.2%;
                y: parent.height * 38.2%;
                height: parent.height * 23.6%;
                width: parent.width * 23.6%;
                opacity: 0.8;
                background: Style.popup-win-background;
                border-radius: self.height * 14.6%;
                Text {
                    text: save-button.recordd-res.msg;
                    font-size: parent.height * 14.6%;
                    font-family: Style.default-font-family;
                }
            }
        }
    }

    save-button := HorizontalBox {
        in-out property <RecordRes> recordd-res;

        min-height: 36px;
        preferred-height: parent.min-height * 6.18%;
        max-height: 64px;
        alignment: center;

        GeneralButton {
            button-name: "save";

            click-button => {
                save-button.save();
            }

            height: parent.preferred-height;
            width: root.width * 14.6%;
        }

        function save() {
            record-content.focus();
            save-button.recordd-res = RecordController.save-records(record-content.text, CalendarStatus.date);
            if save-button.recordd-res.success {
                ReviewController.refresh();
                record-content.clear-content();
            }
            save-warnning.popup-and-hide();
            debug("save function finish");
        }
    }
}

export { Record, RecordStatus, RecordController, RecordRes }
